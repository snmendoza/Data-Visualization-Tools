
#: import filechooser gui.filechooser
#: import configuration configuration

<SideBarButton@Button>:
     text_size: self.size
     size_hint_y: 0.15
     padding: 15, 15
     halign: 'left'
     valign: 'middle'

<SideBarToggle@ToggleButton>:
     text_size: self.size
     size_hint_y: 0.15
     padding: 15, 15
     halign: 'left'
     valign: 'middle'

<SideBar@BoxLayout>:
     orientation: 'vertical'
     Button:
          text: ''
     SideBarButton:
          text: 'Load File'
          size_hint_y: None
          height: 35
          on_press: dialog = filechooser.FileDialog(app.load_data_file); dialog.load_file(configuration.parser['settings']['data_location'])
     SideBarButton:
          size_hint_y: None
          height: 35
          text: ''
          on_press:pass# app.remove_tab()
     SideBarToggle:
          size_hint_y: None
          height: 35
          id: autopopulate
          text: 'Autopopulate'
          state: 'down'

<TreeViewButton>:
     size_hint_y: 0.1

<CustomTreeView>:
     app: app

<ScrollTree@ScrollView>:
     CustomTreeView:
          id: treeview
          root_options: {'text':'Loaded Files', 'hide_root':False}
          size_hint_y: None
          height:self.parent.height * 2

<MenuBar@BoxLayout>:
     orientation:'horizontal'
     # SideBar:
     #      size_hint_x: 0.2
     #      id: sidebar
     # ScrollTree:
     #      id: scrolltree

<SideBarLabelEntry@BoxLayout>:
     orientation: 'vertical'

<PlotLimiterEntry@BoxLayout>:
     size_hint_y: None
     height: 60
     orientation: 'vertical'
     Label:
          text: root.text
     BoxLayout:
          orientation: 'horizontal'
          TextInput:
               id: 'min'
               text: 'min'
               multiline: False
               on_text_validate: root.update_bounds()
          TextInput:
               id: 'max'
               text: 'max'
               multiline: False
               on_text_validate: root.update_bounds()


<ProgressionControl@BoxLayout>:
     size_hint_y: 0.1
     orientation: 'horizontal'
     BoxLayout:
          orientation: 'vertical'
          size_hint_x: 0.15
          Label:
               text: "Cycle Center"
          Label:
               text: "Cycle Range"
     BoxLayout:
          orientation: 'vertical'
          size_hint_x: .7
          Slider:
               id: cycle_center
               step: 1
               on_value: root.update_cycle_range()
          Slider:
               id: cycle_width
               step: 1
               on_value: root.update_cycle_range()
     ToggleButton:
          size_hint: 0.15, 1.0
          text: 'Ah/SOC'
          on_state: root.toggle_SOC_view(self)

<SideBarLimitDesigner>:
     orientation: 'vertical'
     size_hint_y: None
     Label:
          size_hint_y: None
          height: 45
          text: 'Plot Bounds'


<PlotTabbedPanel>:
     do_default_tab: False
     tab_width: 150

<CloseableHeaderOverLay@BoxLayout>:
     pos: root.apparent.pos
     size_hint: None, None
     size: root.apparent.size
     padding: 3
     orientation: 'horizontal'
     on_touch_down: if args[1].button == 'right': app.compare_cells(self.apparent.plot_tab)

     Label:
          id:lbl
          text: root.apparent.text
     Button:
          size_hint: None, 1
          width: 22
          text: 'X'
          color: 0.7, 0.2, 0.2, 0.7
          on_release: app.remove_tab(tab=root.apparent)

<PlotPanelItem>:
     color: 0,0,0,0
     disabled_color: self.color
     size_hint_x: None
     width: self.texture_size[0] + 40



<PlotTab>:
     orientation: 'horizontal'
     BoxLayout:
          id: sidebar
          padding: 2
          spacing: 5
          size_hint_x: 0.2
          orientation: 'vertical'
          SideBarLabelEntry:
               size_hint_y: None
               height: 60
               Label:
                    text: 'Active Mass:'
               TextInput:
                    id: mass_input
                    text: '(mg)'
                    multiline: False
                    on_text_validate:print('triggered'); root.actual_parent.update_mass(self)
          # SideBarLabelEntry:
          #      size_hint_y: None
          #      height: 60
          #      Label:
          #           text: "Target:"
          #      TextInput:
          #           text: ' (mAh/g)'
          #           multiline: False
          #           on_text_validate: root.actual_parent.update_reference(self)
          # SideBarLimitDesigner:
          #      charts: root.actual_parent.plot_handler.charts
          Button:
               size_hint_y: 0.1
               text: 'View in Excel'
               on_release: root.actual_parent.launch_excel(self)
